// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
	project.ext.MAVEN_REPO_CACHE = System.getenv("MAVEN_REPO_CACHE")?.trim()
	project.ext.TRANSLATIONS_ONLY = System.getenv("TRANSLATIONS_ONLY")?.trim()
	if (MAVEN_REPO_CACHE) {
		repositories { maven { url MAVEN_REPO_CACHE } }
	} else {
		repositories {
			google()
			mavenCentral()
		}
	}
}

plugins {
	id 'com.diffplug.spotless' version '6.5.2'
}

if (MAVEN_REPO_CACHE) {
	allprojects {
		buildscript {
			repositories { maven { url MAVEN_REPO_CACHE } }
		}
		repositories { maven { url MAVEN_REPO_CACHE } }
	}
} else {
	allprojects {
		buildscript {
			repositories {
				google()
				mavenCentral()
			}
		}
		repositories {
			google()
			mavenCentral()
		}
	}
}

if (!TRANSLATIONS_ONLY) {
	apply from: 'spotless.gradle'
}

task resolveDependencies {
	setDescription "Resolves all projects dependencies from the repository."
	setGroup "Build Server"

	doLast {
		rootProject.allprojects { project ->
			project.buildscript.configurations.forEach { configuration ->
				if (configuration.canBeResolved) {
					configuration.resolve()
				}
			}

			project.configurations.forEach { configuration ->
				if (configuration.canBeResolved) {
					configuration.resolve()
				}
			}
		}
	}
}

ext {
	// We need to use the -P format for properties, so we need to access them using the "project" global variable
	// So we do not use the 'System.properties.getProperty("carvedTests") ?: "false"' pattern here
	if ( ! project.hasProperty("jacocoEnabled")) {
		// Log a warning here
		println("jacocoEnabled property not defined. Default it to false")
		jacocoEnabled = "false"
	}
	if (! project.hasProperty("carvedTests")) {
		println("carvedTests property not defined. Default it to false")
		carvedTests = "false"
	}

	println "Summary  of props:"
	println "jacocoEnabled: " + jacocoEnabled.toBoolean()
	println "carvedTests:   " + carvedTests.toBoolean()

	// Set default values here. Those may be overwritten inside app/build.gradle
	testReportPrefix = "${buildDir}/carvedTest/testExecution"
	coverageReportPrefix = "${buildDir}/carvedTest/coverage"
}